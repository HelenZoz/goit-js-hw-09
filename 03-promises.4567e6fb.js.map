{"mappings":"qhBA2CA,IAAAA,EAAAC,EAAA,SA+BA,SAASC,EAAcC,EAAUC,GAChC,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC1B,MAAMC,EAAgBC,KAAKC,SAAW,GAEtCC,YAAW,KACLH,EACFF,EAAQ,C,SAACH,E,MAAUC,IAEnBG,EAAO,C,SAAEJ,E,MAAUC,GAAQ,GAE5BA,EAAM,G,CAvCEQ,SAASC,cAAc,SAE/BC,iBAAiB,UAExB,SAAsBC,GACpBA,EAAEC,iBAEF,MAAQZ,MAAAa,EAAKC,KAAEA,EAAIC,OAAEA,GAAWJ,EAAEK,OAAOC,SAEzCC,QAAQC,WAAWN,EAAMO,aAAcN,EAAKM,QAExCP,EAAMO,OAAS,GAAKN,EAAKM,OAAS,GAAKL,EAAOK,OAAS,IACzDC,EAAAzB,GAAS0B,OAAOC,QAAQ,oCAED,IAApB,IAAIC,EAAI,EAAGA,EAAIT,EAAOK,MAAOI,GAAK,EAAG,CACxC,IAAIC,EAAWD,EAAI,EACnB,MAAME,EAASC,OAAOd,EAAMO,OAASO,OAAOb,EAAKM,OAASI,EAGxD1B,EAAc2B,EAAUC,GACzBE,MAAK,EAAC7B,SAAEA,EAAQC,MAAEA,MACjBqB,EAAAzB,GAAS0B,OAAOO,QAAQ,uBAAqB9B,QAAiBC,MAAU,IAEzE8B,OAAM,EAAC/B,SAAEA,EAAQC,MAAEA,MAClBqB,EAAAzB,GAAS0B,OAAOS,QAAQ,sBAAoBhC,QAAeC,MAAU,G","sources":["src/js/03-promises.js"],"sourcesContent":["// const formEl = document.querySelector('.form');\n\n// formEl.addEventListener('submit', handleSubmit);\n\n// function handleSubmit(e) {\n//   e.preventDefault();\n\n//   const { delay, step, amount } = e.target.elements;\n\n//   console.log(typeof delay.value, typeof step.value);\n  \n//   if (delay.value <= 0 || step.value <= 0 || amount.value <= 0) {\n//     alert(\"Пожалуйста, введите значение > 0\");\n//   } \n//   for (let i = 0; i < amount.value; i += 1) {\n//     let position = i + 1;\n//     const delays = Number(delay.value) + Number(step.value) * i;\n\n\n//       createPromise(position, delays)\n//     .then(({ position, delay }) => {\n//       console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n//     })\n//     .catch(({ position, delay }) => {\n//       console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n//     });\n//     }\n// }\n\n// function createPromise(position, delay) {\n//  return new Promise((resolve, reject) => {\n//     const shouldResolve = Math.random() > 0.3;\n\n//     setTimeout(() => {\n//       if (shouldResolve) {\n//         resolve({position, delay});\n//       } else {\n//         reject({ position, delay });\n//       }\n//     }, delay);\n//  })\n// }\n\nimport Notiflix from 'notiflix';\n\nconst formEl = document.querySelector('.form');\n\nformEl.addEventListener('submit', handleSubmit);\n\nfunction handleSubmit(e) {\n  e.preventDefault();\n\n  const { delay, step, amount } = e.target.elements;\n\n  console.log(typeof delay.value, typeof step.value);\n  \n  if (delay.value <= 0 || step.value <= 0 || amount.value <= 0) {\n    Notiflix.Notify.warning(\"Пожалуйста, введите значение > 0\");\n  } \n  for (let i = 0; i < amount.value; i += 1) {\n    let position = i + 1;\n    const delays = Number(delay.value) + Number(step.value) * i;\n\n\n      createPromise(position, delays)\n    .then(({ position, delay }) => {\n      Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n    })\n    .catch(({ position, delay }) => {\n      Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n    });\n    }\n}\n\nfunction createPromise(position, delay) {\n return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({position, delay});\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n })\n}"],"names":["$7Y9D8","parcelRequire","$47d4ff9957288465$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","document","querySelector","addEventListener","e","preventDefault","delay1","step","amount","target","elements","console","log","value","$parcel$interopDefault","Notify","warning","i","position1","delays","Number","then","success","catch","failure"],"version":3,"file":"03-promises.4567e6fb.js.map"}